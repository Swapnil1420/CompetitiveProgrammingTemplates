<snippet>
	<content><![CDATA[
class segtree {
	vector<ll> v;
	int size;
public:
	segtree() { size = 0; }
	segtree(int n) {
		size = n;
		v.resize(4 * n, 0);
	}
	void build(vector<ll> &a, int l = 0, int r = -1, int node = 0) {
		if (r == -1) r = size - 1;
		if (l == r) {
			v[node] = a[l];
			return;
		}
		int m = l + (r - l) / 2;
		build(a, l, m, 2 * node + 1);
		build(a, m + 1, r, 2 * node + 2);
		v[node] = max(v[2 * node + 1] , v[2 * node + 2]);
	}
	ll query(int i, int j, int l = 0, int r = -1, int node = 0) {
		if (r == -1) r = size - 1;
		if (j < l || i > r) return LLONG_MIN;
		else if (l >= i && r <= j) return v[node];
		int m = l + (r - l) / 2;
		return max(query(i, j, l, m, 2 * node + 1) , query(i, j, m + 1, r, 2 * node + 2));
	}
	void update(int i, ll val, int l = 0, int r = -1, int node = 0) {
		if (r == -1) r = size - 1;
		if (l == r) {
			v[node] = val;
			return;
		}
		int m = l + (r - l) / 2;
		if (i <= m) update(i, val, l, m, 2 * node + 1);
		else update(i, val, m + 1, r, 2 * node + 2);
		v[node] = max(v[2 * node + 1] , v[2 * node + 2]);
	}
};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>segmentree</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
